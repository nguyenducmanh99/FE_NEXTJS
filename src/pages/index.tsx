import Head from "next/head";
import Features from "@/components/features";
import Header from "@/components/ui/header";
import styled from "styled-components";
import Footer from "@/components/ui/footer";
import "tailwindcss/tailwind.css";
import SlideShow from "@/components/shared/SlideShow";
import ContentList from "@/components/ContentList";
import Script from "next/script";
import { IProduct } from "@/constant";
import { GetServerSideProps, InferGetServerSidePropsType } from "next/types";
import { store, useProductSlice, wrapper } from "@/store";
import { END } from "redux-saga";

Home.displayName = "Home";
export default function Home({
  dataServer,
}: InferGetServerSidePropsType<typeof getServerSideProps>) {
  return (
    <>
      <Script
        src="https://use.fontawesome.com/releases/v5.0.13/js/all.js"
        async
      ></Script>
      <Container className="grow">
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <Header />
        <SlideShow />
        <Features />
        <ContentList products={dataServer}/>
      </Container>
      <Footer />
    </>
  );
}

export const getServerSideProps: GetServerSideProps<{
  dataServer: IProduct[] | undefined;
}> = wrapper.getServerSideProps(() => async ({ req, res }: any) => {
  const { getProductRequest } = useProductSlice().actions;
  await store.dispatch(getProductRequest(null));
  await store.dispatch(END);
  await store.sagaTask.toPromise();
  const dataServer: IProduct[] | undefined =
    store.getState().products.productData;
  if (dataServer) return { props: { dataServer } };
});

const Container = styled.div``;
